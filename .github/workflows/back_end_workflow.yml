name: Back-end GitHub actions workflow for the resume challenge
 
# The workflow should only trigger on push events to the main branch
on:
  push:
    branches:
      - main
env:
  # Setting an environment variable with the value of a configuration variable
  env_region: ${{ vars.REGION }}

# Required to get the ID Token that will be used for OIDC
permissions:
  id-token: write
 
jobs:
  unit-test-lambda-code:    
    runs-on: ubuntu-latest
    environment: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Get Python 3.9 version
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"    
      
      - name: Install required libraries
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: bash

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ vars.REGION }}
          role-to-assume: ${{ secrets.TEST_DEPLOY_ROLE }}
          role-session-name: OIDCSession
        
      - name: Running Unit Tests for Lambda handler
        run: |
          export TABLE_NAME=${{ vars.TABLE_NAME }} 
          python3 -m unittest test_lambda_handler > unit_test.log
          allPassed=$?
          if [ $allPassed -ne 0 ]; then
              echo "Unit test error. Please investigate logs"
              exit 1
          fi
          exit $allPassed
        shell: bash


  deploy-lambda-code:
    needs: unit-test-lambda-code    
    runs-on: ubuntu-latest
    environment: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      # perhaps shall separate policies and use role only for this action
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ vars.REGION }}
          role-to-assume: ${{ secrets.TEST_DEPLOY_ROLE }}
          role-session-name: OIDCSession  

      - name: Pack Lambda and load to S3 S3Bucket
        run: |
          zip $LAMBDA_FUNCTION.zip lambda_function.py
          aws s3 cp $LAMBDA_FUNCTION.zip s3://${{ secrets.S3_LAMBDA_SOURCE_BUCKET }}/$LAMBDA_FUNCTION.zip
        shell: bash
        env: 
          LAMBDA_FUNCTION: ${{ vars.LAMBDA_NAME }}  

  deploy-cloudformation_stack:
    needs: [unit-test-lambda-code, deploy-lambda-code]   
    runs-on: ubuntu-latest
    environment: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      # perhaps shall separate policies and use role only for this action
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ vars.REGION }}
          role-to-assume: ${{ secrets.TEST_DEPLOY_ROLE }}
          role-session-name: OIDCSession  

      - name: AWS CloudFormation "Deploy CloudFormation Stack" Action for GitHub Actions
        uses: aws-actions/aws-cloudformation-github-deploy@v1.1.0
        with:
          name: crc-template3
          template: cf_test_stack.yaml
          no-fail-on-empty-changeset: "1"
    